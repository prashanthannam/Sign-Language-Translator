Q1 -------------
Base called 
Base1 called
Derived called

Q2 -------------
sum of all the maximum needs is less than m+n
Q3 -------------
All the above
Q4 -------------
1, 3, 4
Q5 -------------
create table Employee(id integer, name varchar(40), rating integer, CHECK(rating >= 1 AND rating <=10));
Q6 -------------
1, 2, 4
Q7 -------------
It is a true encapsulation.
Q8 -------------
1, 3, 4
Q9 -------------
this.x
Q10 -------------
All of the above
Q11 -------------
t = int(input())

while t > 0:
    q = int(input())
    A = []
    for i in range(0, q):
        c, v = input().split(' ')
        x = int(v)
        if c == 'A':
            A.append(x)
            A.sort()
        if c == 'I':
            for j in range(0, len(A)):
                A[j] += x
        if c == 'D':
            for j in range(0, len(A)):
                A[j] -= x
        if c == 'P':
            if x <= len(A):
                print(A[len(A)-x])
            else:
                print(-1)
    t -= 1
Q12 -------------
t = int(input())

while t > 0:
    n = int(input())
    x = input().split(' ')
    s = [0]*n
    d = {}
    for i in range(n):
        s[i] = int(x[i])
    for i in range(n):
        k = 0
        for j in range(i+1, n):
            if s[i] > s[j]:
                k += 1
        print(k, end=' ')
    t -= 1
